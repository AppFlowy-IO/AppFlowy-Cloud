name: Server

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2
  SQLX_FEATURES: "rustls,postgres"
  APP__GOTRUE__BASE_URL: http://localhost:3000
  APP__GOTRUE__JWT_SECRET: hello123
  GOTRUE_SMTP_PASS: ${{ secrets.GOTRUE_SMTP_PASS }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            AppFlowy-Cloud
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./build/init_database.sh
      - name: Check sqlx-data.json is up-to-date
        run: |
          cargo sqlx prepare --check -- --bin appflowy_cloud
      - name: Run Docker-Compose
        run: |
          docker-compose up -d
      - name: Add registered user
        run: |
          export GOTRUE_MAILER_AUTOCONFIRM=true
          docker-compose up -d
          curl localhost:9998/signup \
            --data-raw '{"email":"xigahi8979@tipent.com","password":"Hello123!"}' \
            --header 'Content-Type: application/json'
          export GOTRUE_MAILER_AUTOCONFIRM=false
          docker-compose up -d

      - name: Run tests
        run: |
          cargo test


  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check


  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./build/init_database.sh
      - name: Linting
        run: cargo clippy -- -D warnings
