{
  "db_name": "PostgreSQL",
  "query": "\n    WITH\n      new_creator AS (\n        INSERT INTO af_template_creator (name, avatar_url)\n        VALUES ($1, $2)\n        RETURNING creator_id, name, avatar_url\n      ),\n      account_links AS (\n        INSERT INTO af_template_creator_account_link (creator_id, link_type, url)\n        SELECT new_creator.creator_id as creator_id, link_type, url FROM\n        UNNEST($3::text[], $4::text[]) AS t(link_type, url)\n        CROSS JOIN new_creator\n        RETURNING\n          creator_id,\n          link_type,\n          url\n      )\n    SELECT\n      new_creator.creator_id AS id,\n      name,\n      avatar_url,\n      ARRAY_AGG((link_type, url)) FILTER (WHERE link_type IS NOT NULL) AS \"account_links: Vec<AccountLinkColumn>\"\n      FROM new_creator\n      LEFT OUTER JOIN account_links\n      ON new_creator.creator_id = account_links.creator_id\n      GROUP BY (id, name, avatar_url)\n    ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "avatar_url",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "account_links: Vec<AccountLinkColumn>",
        "type_info": "RecordArray"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Text",
        "TextArray",
        "TextArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null
    ]
  },
  "hash": "23ce30adcad72a7beba4db6a1a9a5947b433aa28d1ac8a1e9fa328aa751fe4a2"
}
