{
  "db_name": "PostgreSQL",
  "query": "\n    WITH\n      updated_creator AS (\n        UPDATE af_template_creator\n          SET name = $2, avatar_url = $3, updated_at = NOW()\n          WHERE creator_id = $1\n        RETURNING creator_id, name, avatar_url\n      ),\n      account_links AS (\n        INSERT INTO af_template_creator_account_link (creator_id, link_type, url)\n        SELECT updated_creator.creator_id as creator_id, link_type, url FROM\n        UNNEST($4::text[], $5::text[]) AS t(link_type, url)\n        CROSS JOIN updated_creator\n        RETURNING\n          creator_id,\n          link_type,\n          url\n      ),\n      creator_number_of_templates AS (\n        SELECT\n          creator_id,\n          COUNT(1)::int AS number_of_templates\n        FROM af_template_view\n        WHERE creator_id = $1\n        GROUP BY creator_id\n      )\n    SELECT\n      updated_creator.creator_id AS id,\n      name,\n      avatar_url,\n      ARRAY_AGG((link_type, url)) FILTER (WHERE link_type IS NOT NULL) AS \"account_links: Vec<AccountLinkColumn>\",\n      COALESCE(number_of_templates, 0) AS \"number_of_templates!\"\n      FROM updated_creator\n      LEFT OUTER JOIN account_links\n      USING (creator_id)\n      LEFT OUTER JOIN creator_number_of_templates\n      USING (creator_id)\n      GROUP BY (id, name, avatar_url, number_of_templates)\n    ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "avatar_url",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "account_links: Vec<AccountLinkColumn>",
        "type_info": "RecordArray"
      },
      {
        "ordinal": 4,
        "name": "number_of_templates!",
        "type_info": "Int4"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Text",
        "Text",
        "TextArray",
        "TextArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null,
      null
    ]
  },
  "hash": "3ca587826f0598e7786c765dcb2fcd6ae08d8aa404f02920307547c769a3f91b"
}
