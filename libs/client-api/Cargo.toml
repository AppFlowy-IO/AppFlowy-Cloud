[package]
name = "client-api"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
reqwest = { version = "0.11.23", default-features = false, features = ["stream","json"] }
anyhow = "1.0.79"
serde_repr = "0.1.18"
gotrue = { path = "../gotrue" }
gotrue-entity = { path = "../gotrue-entity" }
shared-entity = { path = "../shared-entity" }
tracing = { version = "0.1" }
thiserror = "1.0.56"
bytes = "1.5"
uuid = "1.6.1"
futures-util = "0.3.30"
futures-core = "0.3.30"
parking_lot = "0.12.1"
brotli = "3.4.0"
mime_guess = "2.0.4"
async-trait = { version = "0.1.77" }
prost = "0.12.3"
bincode = "1.3.3"
url = "2.5.0"
mime = "0.3.17"
tokio-stream = { version = "0.1.14" }
realtime-entity = { workspace = true }
chrono = "0.4"
websocket = { workspace = true, features = ["native-tls"] }

collab = { version = "0.1.0", optional = true }
collab-entity = { version = "0.1.0" }
yrs = { workspace = true, optional = true }
realtime-protocol = { workspace = true }
workspace-template = { workspace = true, optional = true }
serde_json.workspace = true
serde.workspace = true
database-entity.workspace = true
app-error = { workspace = true, features = ["tokio_error", "bincode_error"] }
scraper = { version = "0.17.1", optional = true }
governor = { version = "0.6.0" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio-retry = "0.3"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.tokio]
workspace = true
features = ["sync", "net"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.realtime-entity]
workspace = true
features = ["tungstenite"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.40"
getrandom = { version = "0.2", features = ["js"]}
tokio = { workspace = true, features = ["sync"]}
again = "0.1.2"

[features]
collab-sync = ["collab", "yrs"]
test_util = ["scraper"]
template = ["workspace-template"]


[profile.dev]
debug = true
